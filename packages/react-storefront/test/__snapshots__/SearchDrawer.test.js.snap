// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchDrawer should render with no props 1`] = `
<TestContext>
  <div id="root">
    <TestProvider app={{...}} history={{...}}>
      <Provider router={{...}} app={{...}} history={{...}}>
        <MuiThemeProviderOld theme={{...}}>
          <WithStyles(inject-SearchDrawer)>
            <inject-SearchDrawer classes={{...}}>
              <SearchDrawer classes={{...}} search={{...}} history={{...}} theme={[undefined]} placeholder="Search..." CloseButtonIcon={[Function: CloseButtonIcon]} blurBackground={true} searchButtonVariant="fab" showClearButton={true} createSubmitURL={[Function: createSubmitURL]}>
                <WithStyles(Drawer) open={true} anchor="bottom" className="RSFSearchDrawer-root-1" classes={{...}} ModalProps={{...}}>
                  <Drawer open={true} anchor="bottom" className="RSFSearchDrawer-root-1" ModalProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}} variant="temporary">
                    <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-17 MuiDrawer-modal-28 RSFSearchDrawer-root-1" open={true} onClose={[undefined]} hideBackdrop={true}>
                      <Modal BackdropProps={{...}} className="MuiDrawer-root-17 MuiDrawer-modal-28 RSFSearchDrawer-root-1" open={true} onClose={[undefined]} hideBackdrop={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} keepMounted={false} manager={{...}}>
                        <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                          <Portal containerInfo={{...}}>
                            <div className="mui-fixed MuiModal-root-29 MuiDrawer-root-17 MuiDrawer-modal-28 RSFSearchDrawer-root-1">
                              <RootRef rootRef={[Function]}>
                                <WithTheme(Slide) in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <Slide theme={{...}} in={true} direction="up" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                    <EventListener target="window" onResize={[Function: debounced]}>
                                      <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={true} direction="up" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                        <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-19 RSFSearchDrawer-paper-2 MuiDrawer-paperAnchorBottom-23 RSFSearchDrawer-paperAnchorBottom-3" style={{...}} direction="up" role="document" tabIndex="-1">
                                          <Paper elevation={16} square={true} className="MuiDrawer-paper-19 RSFSearchDrawer-paper-2 MuiDrawer-paperAnchorBottom-23 RSFSearchDrawer-paperAnchorBottom-3" style={{...}} direction="up" role="document" tabIndex="-1" classes={{...}} component="div">
                                            <div className="MuiPaper-root-31 MuiPaper-elevation16-49 MuiDrawer-paper-19 RSFSearchDrawer-paper-2 MuiDrawer-paperAnchorBottom-23 RSFSearchDrawer-paperAnchorBottom-3" style={{...}} direction="up" role="document" tabIndex="-1">
                                              <div className="RSFSearchDrawer-wrap-4">
                                                <form className="RSFSearchDrawer-header-5" onSubmit={[Function]}>
                                                  <WithStyles(IconButton) className="RSFSearchDrawer-closeButton-6" variant="contained" color="primary" onClick={[Function]}>
                                                    <IconButton className="RSFSearchDrawer-closeButton-6" variant="contained" color="primary" onClick={[Function]} classes={{...}} disabled={false}>
                                                      <WithStyles(ButtonBase) className="MuiIconButton-root-58 MuiIconButton-colorPrimary-60 RSFSearchDrawer-closeButton-6" centerRipple={true} focusRipple={true} disabled={false} variant="contained" onClick={[Function]}>
                                                        <ButtonBase className="MuiIconButton-root-58 MuiIconButton-colorPrimary-60 RSFSearchDrawer-closeButton-6" centerRipple={true} focusRipple={true} disabled={false} variant="contained" onClick={[Function]} classes={{...}} component="button" disableRipple={false} disableTouchRipple={false} tabIndex="0" type="button">
                                                          <button className="MuiButtonBase-root-64 MuiIconButton-root-58 MuiIconButton-colorPrimary-60 RSFSearchDrawer-closeButton-6" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex="0" type="button" disabled={false} variant="contained" onClick={[Function]}>
                                                            <span className="MuiIconButton-label-63">
                                                              <CloseButtonIcon>
                                                                <pure(ClearIcon)>
                                                                  <ClearIcon>
                                                                    <WithStyles(SvgIcon)>
                                                                      <SvgIcon classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                        <svg className="MuiSvgIcon-root-67" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                          <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" />
                                                                          <path fill="none" d="M0 0h24v24H0z" />
                                                                        </svg>
                                                                      </SvgIcon>
                                                                    </WithStyles(SvgIcon)>
                                                                  </ClearIcon>
                                                                </pure(ClearIcon)>
                                                              </CloseButtonIcon>
                                                            </span>
                                                            <NoSsr defer={false} fallback={{...}}>
                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={true}>
                                                                <TouchRipple center={true} classes={{...}}>
                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-108" childFactory={[Function: childFactory]}>
                                                                    <span className="MuiTouchRipple-root-108" />
                                                                  </TransitionGroup>
                                                                </TouchRipple>
                                                              </WithStyles(TouchRipple)>
                                                            </NoSsr>
                                                          </button>
                                                        </ButtonBase>
                                                      </WithStyles(ButtonBase)>
                                                    </IconButton>
                                                  </WithStyles(IconButton)>
                                                  <Hbox>
                                                    <WithStyles(Box) alignItems="center" flexDirection="row">
                                                      <Box alignItems="center" flexDirection="row" classes={{...}}>
                                                        <div className="RSFBox-root-76" style={{...}}>
                                                          <WithStyles(Input) type="text" value="" placeholder="Search..." onChange={[Function: onChange]} onFocus={[Function]} disableUnderline={true} inputRef={[Function]} classes={{...}} endAdornment={false}>
                                                            <Input type="text" value="" placeholder="Search..." onChange={[Function: onChange]} onFocus={[Function]} disableUnderline={true} inputRef={[Function]} endAdornment={false} classes={{...}}>
                                                              <WithStyles(WithFormControlContext(InputBase)) classes={{...}} type="text" value="" placeholder="Search..." onChange={[Function: onChange]} onFocus={[Function]} inputRef={[Function]} endAdornment={false} fullWidth={false} inputComponent="input" multiline={false}>
                                                                <WithFormControlContext(InputBase) type="text" value="" placeholder="Search..." onChange={[Function: onChange]} onFocus={[Function]} inputRef={[Function]} endAdornment={false} fullWidth={false} inputComponent="input" multiline={false} classes={{...}}>
                                                                  <InputBase muiFormControl={[undefined]} type="text" value="" placeholder="Search..." onChange={[Function: onChange]} onFocus={[Function]} inputRef={[Function]} endAdornment={false} fullWidth={false} inputComponent="input" multiline={false} classes={{...}}>
                                                                    <div className="MuiInputBase-root-91 MuiInput-root-78 RSFSearchDrawer-searchField-8" onClick={[Function]}>
                                                                      <input aria-invalid={[undefined]} autoComplete={[undefined]} autoFocus={[undefined]} className="MuiInputBase-input-101 MuiInput-input-86 RSFSearchDrawer-searchInput-9" defaultValue={[undefined]} disabled={[undefined]} id={[undefined]} name={[undefined]} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} onKeyDown={[undefined]} onKeyUp={[undefined]} placeholder="Search..." readOnly={[undefined]} required={[undefined]} rows={[undefined]} value="" type="text" />
                                                                    </div>
                                                                  </InputBase>
                                                                </WithFormControlContext(InputBase)>
                                                              </WithStyles(WithFormControlContext(InputBase))>
                                                            </Input>
                                                          </WithStyles(Input)>
                                                        </div>
                                                      </Box>
                                                    </WithStyles(Box)>
                                                  </Hbox>
                                                </form>
                                              </div>
                                            </div>
                                          </Paper>
                                        </WithStyles(Paper)>
                                      </Transition>
                                    </EventListener>
                                  </Slide>
                                </WithTheme(Slide)>
                              </RootRef>
                            </div>
                          </Portal>
                        </Portal>
                      </Modal>
                    </WithStyles(Modal)>
                  </Drawer>
                </WithStyles(Drawer)>
              </SearchDrawer>
            </inject-SearchDrawer>
          </WithStyles(inject-SearchDrawer)>
        </MuiThemeProviderOld>
      </Provider>
    </TestProvider>
  </div>
</TestContext>
`;
